# source: http://10.142.0.6:4466/trump-said-wtf/development
# timestamp: Tue Aug 07 2018 09:05:16 GMT-0700 (PDT)

enum AdminRole {
  CREATE_UPLOAD
  LIST_UPLOADS
  LIST_ALL_UPLOADS
  ADVANCE_UPLOADS
  PUBLISH_UPLOAD
  DELETE_UPLOADS
}

type AggregateDate {
  count: Int!
}

type AggregateSpeaker {
  count: Int!
}

type AggregateSpeechAPIConversation {
  count: Int!
}

type AggregateSpeechAPIConversationBlock {
  count: Int!
}

type AggregateSpeechAPIWord {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateVideoUpload {
  count: Int!
}

type AggregateVideoUploadAdminMetadata {
  count: Int!
}

type AggregateVideoUploadMetadata {
  count: Int!
}

type AggregateVideoUploadStatusLogItem {
  count: Int!
}

type AggregateVideoUploadStorageLink {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Date {
  month: Int!
  day: Int!
  year: Int!
}

"""A connection to a list of items."""
type DateConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DateEdge]!
  aggregate: AggregateDate!
}

input DateCreateInput {
  month: Int!
  day: Int!
  year: Int!
}

input DateCreateOneInput {
  create: DateCreateInput
}

"""An edge in a connection."""
type DateEdge {
  """The item at the end of the edge."""
  node: Date!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DateOrderByInput {
  month_ASC
  month_DESC
  day_ASC
  day_DESC
  year_ASC
  year_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type DatePreviousValues {
  month: Int!
  day: Int!
  year: Int!
}

type DateSubscriptionPayload {
  mutation: MutationType!
  node: Date
  updatedFields: [String!]
  previousValues: DatePreviousValues
}

input DateSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DateSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DateSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DateSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DateWhereInput
}

scalar DateTime

input DateUpdateDataInput {
  month: Int
  day: Int
  year: Int
}

input DateUpdateInput {
  month: Int
  day: Int
  year: Int
}

input DateUpdateOneInput {
  create: DateCreateInput
  disconnect: Boolean
  delete: Boolean
  update: DateUpdateDataInput
  upsert: DateUpsertNestedInput
}

input DateUpsertNestedInput {
  update: DateUpdateDataInput!
  create: DateCreateInput!
}

input DateWhereInput {
  """Logical AND on all given filters."""
  AND: [DateWhereInput!]

  """Logical OR on all given filters."""
  OR: [DateWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DateWhereInput!]
  month: Int

  """All values that are not equal to given value."""
  month_not: Int

  """All values that are contained in given list."""
  month_in: [Int!]

  """All values that are not contained in given list."""
  month_not_in: [Int!]

  """All values less than the given value."""
  month_lt: Int

  """All values less than or equal the given value."""
  month_lte: Int

  """All values greater than the given value."""
  month_gt: Int

  """All values greater than or equal the given value."""
  month_gte: Int
  day: Int

  """All values that are not equal to given value."""
  day_not: Int

  """All values that are contained in given list."""
  day_in: [Int!]

  """All values that are not contained in given list."""
  day_not_in: [Int!]

  """All values less than the given value."""
  day_lt: Int

  """All values less than or equal the given value."""
  day_lte: Int

  """All values greater than the given value."""
  day_gt: Int

  """All values greater than or equal the given value."""
  day_gte: Int
  year: Int

  """All values that are not equal to given value."""
  year_not: Int

  """All values that are contained in given list."""
  year_in: [Int!]

  """All values that are not contained in given list."""
  year_not_in: [Int!]

  """All values less than the given value."""
  year_lt: Int

  """All values less than or equal the given value."""
  year_lte: Int

  """All values greater than the given value."""
  year_gt: Int

  """All values greater than or equal the given value."""
  year_gte: Int
  _MagicalBackRelation_DateToVideoUploadMetadata_every: VideoUploadMetadataWhereInput
  _MagicalBackRelation_DateToVideoUploadMetadata_some: VideoUploadMetadataWhereInput
  _MagicalBackRelation_DateToVideoUploadMetadata_none: VideoUploadMetadataWhereInput
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createVideoUpload(data: VideoUploadCreateInput!): VideoUpload!
  createVideoUploadStorageLink(data: VideoUploadStorageLinkCreateInput!): VideoUploadStorageLink!
  createVideoUploadMetadata(data: VideoUploadMetadataCreateInput!): VideoUploadMetadata!
  createVideoUploadAdminMetadata(data: VideoUploadAdminMetadataCreateInput!): VideoUploadAdminMetadata!
  createVideoUploadStatusLogItem(data: VideoUploadStatusLogItemCreateInput!): VideoUploadStatusLogItem!
  createSpeaker(data: SpeakerCreateInput!): Speaker!
  createSpeechAPIConversationBlock(data: SpeechAPIConversationBlockCreateInput!): SpeechAPIConversationBlock!
  createSpeechAPIConversation(data: SpeechAPIConversationCreateInput!): SpeechAPIConversation!
  createDate(data: DateCreateInput!): Date!
  createUser(data: UserCreateInput!): User!
  createSpeechAPIWord(data: SpeechAPIWordCreateInput!): SpeechAPIWord!
  updateVideoUpload(data: VideoUploadUpdateInput!, where: VideoUploadWhereUniqueInput!): VideoUpload
  updateVideoUploadStorageLink(data: VideoUploadStorageLinkUpdateInput!, where: VideoUploadStorageLinkWhereUniqueInput!): VideoUploadStorageLink
  updateVideoUploadMetadata(data: VideoUploadMetadataUpdateInput!, where: VideoUploadMetadataWhereUniqueInput!): VideoUploadMetadata
  updateVideoUploadAdminMetadata(data: VideoUploadAdminMetadataUpdateInput!, where: VideoUploadAdminMetadataWhereUniqueInput!): VideoUploadAdminMetadata
  updateVideoUploadStatusLogItem(data: VideoUploadStatusLogItemUpdateInput!, where: VideoUploadStatusLogItemWhereUniqueInput!): VideoUploadStatusLogItem
  updateSpeaker(data: SpeakerUpdateInput!, where: SpeakerWhereUniqueInput!): Speaker
  updateSpeechAPIConversationBlock(data: SpeechAPIConversationBlockUpdateInput!, where: SpeechAPIConversationBlockWhereUniqueInput!): SpeechAPIConversationBlock
  updateSpeechAPIConversation(data: SpeechAPIConversationUpdateInput!, where: SpeechAPIConversationWhereUniqueInput!): SpeechAPIConversation
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateSpeechAPIWord(data: SpeechAPIWordUpdateInput!, where: SpeechAPIWordWhereUniqueInput!): SpeechAPIWord
  deleteVideoUpload(where: VideoUploadWhereUniqueInput!): VideoUpload
  deleteVideoUploadStorageLink(where: VideoUploadStorageLinkWhereUniqueInput!): VideoUploadStorageLink
  deleteVideoUploadMetadata(where: VideoUploadMetadataWhereUniqueInput!): VideoUploadMetadata
  deleteVideoUploadAdminMetadata(where: VideoUploadAdminMetadataWhereUniqueInput!): VideoUploadAdminMetadata
  deleteVideoUploadStatusLogItem(where: VideoUploadStatusLogItemWhereUniqueInput!): VideoUploadStatusLogItem
  deleteSpeaker(where: SpeakerWhereUniqueInput!): Speaker
  deleteSpeechAPIConversationBlock(where: SpeechAPIConversationBlockWhereUniqueInput!): SpeechAPIConversationBlock
  deleteSpeechAPIConversation(where: SpeechAPIConversationWhereUniqueInput!): SpeechAPIConversation
  deleteUser(where: UserWhereUniqueInput!): User
  deleteSpeechAPIWord(where: SpeechAPIWordWhereUniqueInput!): SpeechAPIWord
  upsertVideoUpload(where: VideoUploadWhereUniqueInput!, create: VideoUploadCreateInput!, update: VideoUploadUpdateInput!): VideoUpload!
  upsertVideoUploadStorageLink(where: VideoUploadStorageLinkWhereUniqueInput!, create: VideoUploadStorageLinkCreateInput!, update: VideoUploadStorageLinkUpdateInput!): VideoUploadStorageLink!
  upsertVideoUploadMetadata(where: VideoUploadMetadataWhereUniqueInput!, create: VideoUploadMetadataCreateInput!, update: VideoUploadMetadataUpdateInput!): VideoUploadMetadata!
  upsertVideoUploadAdminMetadata(where: VideoUploadAdminMetadataWhereUniqueInput!, create: VideoUploadAdminMetadataCreateInput!, update: VideoUploadAdminMetadataUpdateInput!): VideoUploadAdminMetadata!
  upsertVideoUploadStatusLogItem(where: VideoUploadStatusLogItemWhereUniqueInput!, create: VideoUploadStatusLogItemCreateInput!, update: VideoUploadStatusLogItemUpdateInput!): VideoUploadStatusLogItem!
  upsertSpeaker(where: SpeakerWhereUniqueInput!, create: SpeakerCreateInput!, update: SpeakerUpdateInput!): Speaker!
  upsertSpeechAPIConversationBlock(where: SpeechAPIConversationBlockWhereUniqueInput!, create: SpeechAPIConversationBlockCreateInput!, update: SpeechAPIConversationBlockUpdateInput!): SpeechAPIConversationBlock!
  upsertSpeechAPIConversation(where: SpeechAPIConversationWhereUniqueInput!, create: SpeechAPIConversationCreateInput!, update: SpeechAPIConversationUpdateInput!): SpeechAPIConversation!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertSpeechAPIWord(where: SpeechAPIWordWhereUniqueInput!, create: SpeechAPIWordCreateInput!, update: SpeechAPIWordUpdateInput!): SpeechAPIWord!
  updateManyVideoUploads(data: VideoUploadUpdateInput!, where: VideoUploadWhereInput): BatchPayload!
  updateManyVideoUploadStorageLinks(data: VideoUploadStorageLinkUpdateInput!, where: VideoUploadStorageLinkWhereInput): BatchPayload!
  updateManyVideoUploadMetadatas(data: VideoUploadMetadataUpdateInput!, where: VideoUploadMetadataWhereInput): BatchPayload!
  updateManyVideoUploadAdminMetadatas(data: VideoUploadAdminMetadataUpdateInput!, where: VideoUploadAdminMetadataWhereInput): BatchPayload!
  updateManyVideoUploadStatusLogItems(data: VideoUploadStatusLogItemUpdateInput!, where: VideoUploadStatusLogItemWhereInput): BatchPayload!
  updateManySpeakers(data: SpeakerUpdateInput!, where: SpeakerWhereInput): BatchPayload!
  updateManySpeechAPIConversationBlocks(data: SpeechAPIConversationBlockUpdateInput!, where: SpeechAPIConversationBlockWhereInput): BatchPayload!
  updateManySpeechAPIConversations(data: SpeechAPIConversationUpdateInput!, where: SpeechAPIConversationWhereInput): BatchPayload!
  updateManyDates(data: DateUpdateInput!, where: DateWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  updateManySpeechAPIWords(data: SpeechAPIWordUpdateInput!, where: SpeechAPIWordWhereInput): BatchPayload!
  deleteManyVideoUploads(where: VideoUploadWhereInput): BatchPayload!
  deleteManyVideoUploadStorageLinks(where: VideoUploadStorageLinkWhereInput): BatchPayload!
  deleteManyVideoUploadMetadatas(where: VideoUploadMetadataWhereInput): BatchPayload!
  deleteManyVideoUploadAdminMetadatas(where: VideoUploadAdminMetadataWhereInput): BatchPayload!
  deleteManyVideoUploadStatusLogItems(where: VideoUploadStatusLogItemWhereInput): BatchPayload!
  deleteManySpeakers(where: SpeakerWhereInput): BatchPayload!
  deleteManySpeechAPIConversationBlocks(where: SpeechAPIConversationBlockWhereInput): BatchPayload!
  deleteManySpeechAPIConversations(where: SpeechAPIConversationWhereInput): BatchPayload!
  deleteManyDates(where: DateWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManySpeechAPIWords(where: SpeechAPIWordWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  videoUploads(where: VideoUploadWhereInput, orderBy: VideoUploadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUpload]!
  videoUploadStorageLinks(where: VideoUploadStorageLinkWhereInput, orderBy: VideoUploadStorageLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUploadStorageLink]!
  videoUploadMetadatas(where: VideoUploadMetadataWhereInput, orderBy: VideoUploadMetadataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUploadMetadata]!
  videoUploadAdminMetadatas(where: VideoUploadAdminMetadataWhereInput, orderBy: VideoUploadAdminMetadataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUploadAdminMetadata]!
  videoUploadStatusLogItems(where: VideoUploadStatusLogItemWhereInput, orderBy: VideoUploadStatusLogItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUploadStatusLogItem]!
  speakers(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Speaker]!
  speechAPIConversationBlocks(where: SpeechAPIConversationBlockWhereInput, orderBy: SpeechAPIConversationBlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SpeechAPIConversationBlock]!
  speechAPIConversations(where: SpeechAPIConversationWhereInput, orderBy: SpeechAPIConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SpeechAPIConversation]!
  dates(where: DateWhereInput, orderBy: DateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Date]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  speechAPIWords(where: SpeechAPIWordWhereInput, orderBy: SpeechAPIWordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SpeechAPIWord]!
  videoUpload(where: VideoUploadWhereUniqueInput!): VideoUpload
  videoUploadStorageLink(where: VideoUploadStorageLinkWhereUniqueInput!): VideoUploadStorageLink
  videoUploadMetadata(where: VideoUploadMetadataWhereUniqueInput!): VideoUploadMetadata
  videoUploadAdminMetadata(where: VideoUploadAdminMetadataWhereUniqueInput!): VideoUploadAdminMetadata
  videoUploadStatusLogItem(where: VideoUploadStatusLogItemWhereUniqueInput!): VideoUploadStatusLogItem
  speaker(where: SpeakerWhereUniqueInput!): Speaker
  speechAPIConversationBlock(where: SpeechAPIConversationBlockWhereUniqueInput!): SpeechAPIConversationBlock
  speechAPIConversation(where: SpeechAPIConversationWhereUniqueInput!): SpeechAPIConversation
  user(where: UserWhereUniqueInput!): User
  speechAPIWord(where: SpeechAPIWordWhereUniqueInput!): SpeechAPIWord
  videoUploadsConnection(where: VideoUploadWhereInput, orderBy: VideoUploadOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoUploadConnection!
  videoUploadStorageLinksConnection(where: VideoUploadStorageLinkWhereInput, orderBy: VideoUploadStorageLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoUploadStorageLinkConnection!
  videoUploadMetadatasConnection(where: VideoUploadMetadataWhereInput, orderBy: VideoUploadMetadataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoUploadMetadataConnection!
  videoUploadAdminMetadatasConnection(where: VideoUploadAdminMetadataWhereInput, orderBy: VideoUploadAdminMetadataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoUploadAdminMetadataConnection!
  videoUploadStatusLogItemsConnection(where: VideoUploadStatusLogItemWhereInput, orderBy: VideoUploadStatusLogItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): VideoUploadStatusLogItemConnection!
  speakersConnection(where: SpeakerWhereInput, orderBy: SpeakerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpeakerConnection!
  speechAPIConversationBlocksConnection(where: SpeechAPIConversationBlockWhereInput, orderBy: SpeechAPIConversationBlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpeechAPIConversationBlockConnection!
  speechAPIConversationsConnection(where: SpeechAPIConversationWhereInput, orderBy: SpeechAPIConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpeechAPIConversationConnection!
  datesConnection(where: DateWhereInput, orderBy: DateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DateConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  speechAPIWordsConnection(where: SpeechAPIWordWhereInput, orderBy: SpeechAPIWordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpeechAPIWordConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

enum Role {
  USER
  ADMIN
}

type Speaker {
  name: String!
  avatarPath: String!
  title: String!
}

"""A connection to a list of items."""
type SpeakerConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SpeakerEdge]!
  aggregate: AggregateSpeaker!
}

input SpeakerCreateInput {
  name: String!
  avatarPath: String!
  title: String!
}

"""An edge in a connection."""
type SpeakerEdge {
  """The item at the end of the edge."""
  node: Speaker!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SpeakerOrderByInput {
  name_ASC
  name_DESC
  avatarPath_ASC
  avatarPath_DESC
  title_ASC
  title_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SpeakerPreviousValues {
  name: String!
  avatarPath: String!
  title: String!
}

type SpeakerSubscriptionPayload {
  mutation: MutationType!
  node: Speaker
  updatedFields: [String!]
  previousValues: SpeakerPreviousValues
}

input SpeakerSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeakerSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeakerSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeakerSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SpeakerWhereInput
}

input SpeakerUpdateInput {
  name: String
  avatarPath: String
  title: String
}

input SpeakerWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeakerWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeakerWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeakerWhereInput!]
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  avatarPath: String

  """All values that are not equal to given value."""
  avatarPath_not: String

  """All values that are contained in given list."""
  avatarPath_in: [String!]

  """All values that are not contained in given list."""
  avatarPath_not_in: [String!]

  """All values less than the given value."""
  avatarPath_lt: String

  """All values less than or equal the given value."""
  avatarPath_lte: String

  """All values greater than the given value."""
  avatarPath_gt: String

  """All values greater than or equal the given value."""
  avatarPath_gte: String

  """All values containing the given string."""
  avatarPath_contains: String

  """All values not containing the given string."""
  avatarPath_not_contains: String

  """All values starting with the given string."""
  avatarPath_starts_with: String

  """All values not starting with the given string."""
  avatarPath_not_starts_with: String

  """All values ending with the given string."""
  avatarPath_ends_with: String

  """All values not ending with the given string."""
  avatarPath_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
}

input SpeakerWhereUniqueInput {
  name: String
}

type SpeechAPIConversation implements Node {
  id: ID!
  videoUpload(where: VideoUploadMetadataWhereInput): VideoUploadMetadata!
  conversation(where: SpeechAPIConversationBlockWhereInput, orderBy: SpeechAPIConversationBlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SpeechAPIConversationBlock!]
}

type SpeechAPIConversationBlock implements Node {
  id: ID!
  speakerTag: Int!
  words(where: SpeechAPIWordWhereInput, orderBy: SpeechAPIWordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SpeechAPIWord!]
  conversation(where: SpeechAPIConversationWhereInput): SpeechAPIConversation!
}

"""A connection to a list of items."""
type SpeechAPIConversationBlockConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SpeechAPIConversationBlockEdge]!
  aggregate: AggregateSpeechAPIConversationBlock!
}

input SpeechAPIConversationBlockCreateInput {
  speakerTag: Int!
  words: SpeechAPIWordCreateManyInput
  conversation: SpeechAPIConversationCreateOneWithoutConversationInput!
}

input SpeechAPIConversationBlockCreateManyWithoutConversationInput {
  create: [SpeechAPIConversationBlockCreateWithoutConversationInput!]
  connect: [SpeechAPIConversationBlockWhereUniqueInput!]
}

input SpeechAPIConversationBlockCreateWithoutConversationInput {
  speakerTag: Int!
  words: SpeechAPIWordCreateManyInput
}

"""An edge in a connection."""
type SpeechAPIConversationBlockEdge {
  """The item at the end of the edge."""
  node: SpeechAPIConversationBlock!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SpeechAPIConversationBlockOrderByInput {
  id_ASC
  id_DESC
  speakerTag_ASC
  speakerTag_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SpeechAPIConversationBlockPreviousValues {
  id: ID!
  speakerTag: Int!
}

type SpeechAPIConversationBlockSubscriptionPayload {
  mutation: MutationType!
  node: SpeechAPIConversationBlock
  updatedFields: [String!]
  previousValues: SpeechAPIConversationBlockPreviousValues
}

input SpeechAPIConversationBlockSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeechAPIConversationBlockSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeechAPIConversationBlockSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeechAPIConversationBlockSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SpeechAPIConversationBlockWhereInput
}

input SpeechAPIConversationBlockUpdateInput {
  speakerTag: Int
  words: SpeechAPIWordUpdateManyInput
  conversation: SpeechAPIConversationUpdateOneWithoutConversationInput
}

input SpeechAPIConversationBlockUpdateManyWithoutConversationInput {
  create: [SpeechAPIConversationBlockCreateWithoutConversationInput!]
  connect: [SpeechAPIConversationBlockWhereUniqueInput!]
  disconnect: [SpeechAPIConversationBlockWhereUniqueInput!]
  delete: [SpeechAPIConversationBlockWhereUniqueInput!]
  update: [SpeechAPIConversationBlockUpdateWithWhereUniqueWithoutConversationInput!]
  upsert: [SpeechAPIConversationBlockUpsertWithWhereUniqueWithoutConversationInput!]
}

input SpeechAPIConversationBlockUpdateWithoutConversationDataInput {
  speakerTag: Int
  words: SpeechAPIWordUpdateManyInput
}

input SpeechAPIConversationBlockUpdateWithWhereUniqueWithoutConversationInput {
  where: SpeechAPIConversationBlockWhereUniqueInput!
  data: SpeechAPIConversationBlockUpdateWithoutConversationDataInput!
}

input SpeechAPIConversationBlockUpsertWithWhereUniqueWithoutConversationInput {
  where: SpeechAPIConversationBlockWhereUniqueInput!
  update: SpeechAPIConversationBlockUpdateWithoutConversationDataInput!
  create: SpeechAPIConversationBlockCreateWithoutConversationInput!
}

input SpeechAPIConversationBlockWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeechAPIConversationBlockWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeechAPIConversationBlockWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeechAPIConversationBlockWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  speakerTag: Int

  """All values that are not equal to given value."""
  speakerTag_not: Int

  """All values that are contained in given list."""
  speakerTag_in: [Int!]

  """All values that are not contained in given list."""
  speakerTag_not_in: [Int!]

  """All values less than the given value."""
  speakerTag_lt: Int

  """All values less than or equal the given value."""
  speakerTag_lte: Int

  """All values greater than the given value."""
  speakerTag_gt: Int

  """All values greater than or equal the given value."""
  speakerTag_gte: Int
  words_every: SpeechAPIWordWhereInput
  words_some: SpeechAPIWordWhereInput
  words_none: SpeechAPIWordWhereInput
  conversation: SpeechAPIConversationWhereInput
}

input SpeechAPIConversationBlockWhereUniqueInput {
  id: ID
}

"""A connection to a list of items."""
type SpeechAPIConversationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SpeechAPIConversationEdge]!
  aggregate: AggregateSpeechAPIConversation!
}

input SpeechAPIConversationCreateInput {
  videoUpload: VideoUploadMetadataCreateOneWithoutGeneratedConversationInput!
  conversation: SpeechAPIConversationBlockCreateManyWithoutConversationInput
}

input SpeechAPIConversationCreateOneWithoutConversationInput {
  create: SpeechAPIConversationCreateWithoutConversationInput
  connect: SpeechAPIConversationWhereUniqueInput
}

input SpeechAPIConversationCreateOneWithoutVideoUploadInput {
  create: SpeechAPIConversationCreateWithoutVideoUploadInput
  connect: SpeechAPIConversationWhereUniqueInput
}

input SpeechAPIConversationCreateWithoutConversationInput {
  videoUpload: VideoUploadMetadataCreateOneWithoutGeneratedConversationInput!
}

input SpeechAPIConversationCreateWithoutVideoUploadInput {
  conversation: SpeechAPIConversationBlockCreateManyWithoutConversationInput
}

"""An edge in a connection."""
type SpeechAPIConversationEdge {
  """The item at the end of the edge."""
  node: SpeechAPIConversation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SpeechAPIConversationOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SpeechAPIConversationPreviousValues {
  id: ID!
}

type SpeechAPIConversationSubscriptionPayload {
  mutation: MutationType!
  node: SpeechAPIConversation
  updatedFields: [String!]
  previousValues: SpeechAPIConversationPreviousValues
}

input SpeechAPIConversationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeechAPIConversationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeechAPIConversationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeechAPIConversationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SpeechAPIConversationWhereInput
}

input SpeechAPIConversationUpdateInput {
  videoUpload: VideoUploadMetadataUpdateOneWithoutGeneratedConversationInput
  conversation: SpeechAPIConversationBlockUpdateManyWithoutConversationInput
}

input SpeechAPIConversationUpdateOneWithoutConversationInput {
  create: SpeechAPIConversationCreateWithoutConversationInput
  connect: SpeechAPIConversationWhereUniqueInput
  delete: Boolean
  update: SpeechAPIConversationUpdateWithoutConversationDataInput
  upsert: SpeechAPIConversationUpsertWithoutConversationInput
}

input SpeechAPIConversationUpdateOneWithoutVideoUploadInput {
  create: SpeechAPIConversationCreateWithoutVideoUploadInput
  connect: SpeechAPIConversationWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: SpeechAPIConversationUpdateWithoutVideoUploadDataInput
  upsert: SpeechAPIConversationUpsertWithoutVideoUploadInput
}

input SpeechAPIConversationUpdateWithoutConversationDataInput {
  videoUpload: VideoUploadMetadataUpdateOneWithoutGeneratedConversationInput
}

input SpeechAPIConversationUpdateWithoutVideoUploadDataInput {
  conversation: SpeechAPIConversationBlockUpdateManyWithoutConversationInput
}

input SpeechAPIConversationUpsertWithoutConversationInput {
  update: SpeechAPIConversationUpdateWithoutConversationDataInput!
  create: SpeechAPIConversationCreateWithoutConversationInput!
}

input SpeechAPIConversationUpsertWithoutVideoUploadInput {
  update: SpeechAPIConversationUpdateWithoutVideoUploadDataInput!
  create: SpeechAPIConversationCreateWithoutVideoUploadInput!
}

input SpeechAPIConversationWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeechAPIConversationWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeechAPIConversationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeechAPIConversationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  videoUpload: VideoUploadMetadataWhereInput
  conversation_every: SpeechAPIConversationBlockWhereInput
  conversation_some: SpeechAPIConversationBlockWhereInput
  conversation_none: SpeechAPIConversationBlockWhereInput
}

input SpeechAPIConversationWhereUniqueInput {
  id: ID
}

type SpeechAPIWord implements Node {
  id: ID!
  startTime: Int!
  endTime: Int!
  word: String!
  speakerTag: Int!
}

"""A connection to a list of items."""
type SpeechAPIWordConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SpeechAPIWordEdge]!
  aggregate: AggregateSpeechAPIWord!
}

input SpeechAPIWordCreateInput {
  startTime: Int!
  endTime: Int!
  word: String!
  speakerTag: Int!
}

input SpeechAPIWordCreateManyInput {
  create: [SpeechAPIWordCreateInput!]
  connect: [SpeechAPIWordWhereUniqueInput!]
}

"""An edge in a connection."""
type SpeechAPIWordEdge {
  """The item at the end of the edge."""
  node: SpeechAPIWord!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SpeechAPIWordOrderByInput {
  id_ASC
  id_DESC
  startTime_ASC
  startTime_DESC
  endTime_ASC
  endTime_DESC
  word_ASC
  word_DESC
  speakerTag_ASC
  speakerTag_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type SpeechAPIWordPreviousValues {
  id: ID!
  startTime: Int!
  endTime: Int!
  word: String!
  speakerTag: Int!
}

type SpeechAPIWordSubscriptionPayload {
  mutation: MutationType!
  node: SpeechAPIWord
  updatedFields: [String!]
  previousValues: SpeechAPIWordPreviousValues
}

input SpeechAPIWordSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeechAPIWordSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeechAPIWordSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeechAPIWordSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SpeechAPIWordWhereInput
}

input SpeechAPIWordUpdateDataInput {
  startTime: Int
  endTime: Int
  word: String
  speakerTag: Int
}

input SpeechAPIWordUpdateInput {
  startTime: Int
  endTime: Int
  word: String
  speakerTag: Int
}

input SpeechAPIWordUpdateManyInput {
  create: [SpeechAPIWordCreateInput!]
  connect: [SpeechAPIWordWhereUniqueInput!]
  disconnect: [SpeechAPIWordWhereUniqueInput!]
  delete: [SpeechAPIWordWhereUniqueInput!]
  update: [SpeechAPIWordUpdateWithWhereUniqueNestedInput!]
  upsert: [SpeechAPIWordUpsertWithWhereUniqueNestedInput!]
}

input SpeechAPIWordUpdateWithWhereUniqueNestedInput {
  where: SpeechAPIWordWhereUniqueInput!
  data: SpeechAPIWordUpdateDataInput!
}

input SpeechAPIWordUpsertWithWhereUniqueNestedInput {
  where: SpeechAPIWordWhereUniqueInput!
  update: SpeechAPIWordUpdateDataInput!
  create: SpeechAPIWordCreateInput!
}

input SpeechAPIWordWhereInput {
  """Logical AND on all given filters."""
  AND: [SpeechAPIWordWhereInput!]

  """Logical OR on all given filters."""
  OR: [SpeechAPIWordWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SpeechAPIWordWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  startTime: Int

  """All values that are not equal to given value."""
  startTime_not: Int

  """All values that are contained in given list."""
  startTime_in: [Int!]

  """All values that are not contained in given list."""
  startTime_not_in: [Int!]

  """All values less than the given value."""
  startTime_lt: Int

  """All values less than or equal the given value."""
  startTime_lte: Int

  """All values greater than the given value."""
  startTime_gt: Int

  """All values greater than or equal the given value."""
  startTime_gte: Int
  endTime: Int

  """All values that are not equal to given value."""
  endTime_not: Int

  """All values that are contained in given list."""
  endTime_in: [Int!]

  """All values that are not contained in given list."""
  endTime_not_in: [Int!]

  """All values less than the given value."""
  endTime_lt: Int

  """All values less than or equal the given value."""
  endTime_lte: Int

  """All values greater than the given value."""
  endTime_gt: Int

  """All values greater than or equal the given value."""
  endTime_gte: Int
  word: String

  """All values that are not equal to given value."""
  word_not: String

  """All values that are contained in given list."""
  word_in: [String!]

  """All values that are not contained in given list."""
  word_not_in: [String!]

  """All values less than the given value."""
  word_lt: String

  """All values less than or equal the given value."""
  word_lte: String

  """All values greater than the given value."""
  word_gt: String

  """All values greater than or equal the given value."""
  word_gte: String

  """All values containing the given string."""
  word_contains: String

  """All values not containing the given string."""
  word_not_contains: String

  """All values starting with the given string."""
  word_starts_with: String

  """All values not starting with the given string."""
  word_not_starts_with: String

  """All values ending with the given string."""
  word_ends_with: String

  """All values not ending with the given string."""
  word_not_ends_with: String
  speakerTag: Int

  """All values that are not equal to given value."""
  speakerTag_not: Int

  """All values that are contained in given list."""
  speakerTag_in: [Int!]

  """All values that are not contained in given list."""
  speakerTag_not_in: [Int!]

  """All values less than the given value."""
  speakerTag_lt: Int

  """All values less than or equal the given value."""
  speakerTag_lte: Int

  """All values greater than the given value."""
  speakerTag_gt: Int

  """All values greater than or equal the given value."""
  speakerTag_gte: Int
  _MagicalBackRelation_SpeechAPIWordToConversationBlockRelation_every: SpeechAPIConversationBlockWhereInput
  _MagicalBackRelation_SpeechAPIWordToConversationBlockRelation_some: SpeechAPIConversationBlockWhereInput
  _MagicalBackRelation_SpeechAPIWordToConversationBlockRelation_none: SpeechAPIConversationBlockWhereInput
}

input SpeechAPIWordWhereUniqueInput {
  id: ID
}

type Subscription {
  videoUpload(where: VideoUploadSubscriptionWhereInput): VideoUploadSubscriptionPayload
  videoUploadStorageLink(where: VideoUploadStorageLinkSubscriptionWhereInput): VideoUploadStorageLinkSubscriptionPayload
  videoUploadMetadata(where: VideoUploadMetadataSubscriptionWhereInput): VideoUploadMetadataSubscriptionPayload
  videoUploadAdminMetadata(where: VideoUploadAdminMetadataSubscriptionWhereInput): VideoUploadAdminMetadataSubscriptionPayload
  videoUploadStatusLogItem(where: VideoUploadStatusLogItemSubscriptionWhereInput): VideoUploadStatusLogItemSubscriptionPayload
  speaker(where: SpeakerSubscriptionWhereInput): SpeakerSubscriptionPayload
  speechAPIConversationBlock(where: SpeechAPIConversationBlockSubscriptionWhereInput): SpeechAPIConversationBlockSubscriptionPayload
  speechAPIConversation(where: SpeechAPIConversationSubscriptionWhereInput): SpeechAPIConversationSubscriptionPayload
  date(where: DateSubscriptionWhereInput): DateSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  speechAPIWord(where: SpeechAPIWordSubscriptionWhereInput): SpeechAPIWordSubscriptionPayload
}

type User implements Node {
  id: ID!
  email: String
  auth0Id: String
  role: Role
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: [AdminRole!]!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateadminRolesInput {
  set: [AdminRole!]
}

input UserCreateInput {
  email: String
  auth0Id: String
  role: Role
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: UserCreateadminRolesInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  auth0Id_ASC
  auth0Id_DESC
  role_ASC
  role_DESC
  displayName_ASC
  displayName_DESC
  avatar_ASC
  avatar_DESC
  givenName_ASC
  givenName_DESC
  familyName_ASC
  familyName_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String
  auth0Id: String
  role: Role
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: [AdminRole!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateadminRolesInput {
  set: [AdminRole!]
}

input UserUpdateDataInput {
  email: String
  auth0Id: String
  role: Role
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: UserUpdateadminRolesInput
}

input UserUpdateInput {
  email: String
  auth0Id: String
  role: Role
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: UserUpdateadminRolesInput
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  auth0Id: String

  """All values that are not equal to given value."""
  auth0Id_not: String

  """All values that are contained in given list."""
  auth0Id_in: [String!]

  """All values that are not contained in given list."""
  auth0Id_not_in: [String!]

  """All values less than the given value."""
  auth0Id_lt: String

  """All values less than or equal the given value."""
  auth0Id_lte: String

  """All values greater than the given value."""
  auth0Id_gt: String

  """All values greater than or equal the given value."""
  auth0Id_gte: String

  """All values containing the given string."""
  auth0Id_contains: String

  """All values not containing the given string."""
  auth0Id_not_contains: String

  """All values starting with the given string."""
  auth0Id_starts_with: String

  """All values not starting with the given string."""
  auth0Id_not_starts_with: String

  """All values ending with the given string."""
  auth0Id_ends_with: String

  """All values not ending with the given string."""
  auth0Id_not_ends_with: String
  role: Role

  """All values that are not equal to given value."""
  role_not: Role

  """All values that are contained in given list."""
  role_in: [Role!]

  """All values that are not contained in given list."""
  role_not_in: [Role!]
  displayName: String

  """All values that are not equal to given value."""
  displayName_not: String

  """All values that are contained in given list."""
  displayName_in: [String!]

  """All values that are not contained in given list."""
  displayName_not_in: [String!]

  """All values less than the given value."""
  displayName_lt: String

  """All values less than or equal the given value."""
  displayName_lte: String

  """All values greater than the given value."""
  displayName_gt: String

  """All values greater than or equal the given value."""
  displayName_gte: String

  """All values containing the given string."""
  displayName_contains: String

  """All values not containing the given string."""
  displayName_not_contains: String

  """All values starting with the given string."""
  displayName_starts_with: String

  """All values not starting with the given string."""
  displayName_not_starts_with: String

  """All values ending with the given string."""
  displayName_ends_with: String

  """All values not ending with the given string."""
  displayName_not_ends_with: String
  avatar: String

  """All values that are not equal to given value."""
  avatar_not: String

  """All values that are contained in given list."""
  avatar_in: [String!]

  """All values that are not contained in given list."""
  avatar_not_in: [String!]

  """All values less than the given value."""
  avatar_lt: String

  """All values less than or equal the given value."""
  avatar_lte: String

  """All values greater than the given value."""
  avatar_gt: String

  """All values greater than or equal the given value."""
  avatar_gte: String

  """All values containing the given string."""
  avatar_contains: String

  """All values not containing the given string."""
  avatar_not_contains: String

  """All values starting with the given string."""
  avatar_starts_with: String

  """All values not starting with the given string."""
  avatar_not_starts_with: String

  """All values ending with the given string."""
  avatar_ends_with: String

  """All values not ending with the given string."""
  avatar_not_ends_with: String
  givenName: String

  """All values that are not equal to given value."""
  givenName_not: String

  """All values that are contained in given list."""
  givenName_in: [String!]

  """All values that are not contained in given list."""
  givenName_not_in: [String!]

  """All values less than the given value."""
  givenName_lt: String

  """All values less than or equal the given value."""
  givenName_lte: String

  """All values greater than the given value."""
  givenName_gt: String

  """All values greater than or equal the given value."""
  givenName_gte: String

  """All values containing the given string."""
  givenName_contains: String

  """All values not containing the given string."""
  givenName_not_contains: String

  """All values starting with the given string."""
  givenName_starts_with: String

  """All values not starting with the given string."""
  givenName_not_starts_with: String

  """All values ending with the given string."""
  givenName_ends_with: String

  """All values not ending with the given string."""
  givenName_not_ends_with: String
  familyName: String

  """All values that are not equal to given value."""
  familyName_not: String

  """All values that are contained in given list."""
  familyName_in: [String!]

  """All values that are not contained in given list."""
  familyName_not_in: [String!]

  """All values less than the given value."""
  familyName_lt: String

  """All values less than or equal the given value."""
  familyName_lte: String

  """All values greater than the given value."""
  familyName_gt: String

  """All values greater than or equal the given value."""
  familyName_gte: String

  """All values containing the given string."""
  familyName_contains: String

  """All values not containing the given string."""
  familyName_not_contains: String

  """All values starting with the given string."""
  familyName_starts_with: String

  """All values not starting with the given string."""
  familyName_not_starts_with: String

  """All values ending with the given string."""
  familyName_ends_with: String

  """All values not ending with the given string."""
  familyName_not_ends_with: String
  _MagicalBackRelation_VideoSubmitter_every: VideoUploadWhereInput
  _MagicalBackRelation_VideoSubmitter_some: VideoUploadWhereInput
  _MagicalBackRelation_VideoSubmitter_none: VideoUploadWhereInput
  _MagicalBackRelation_VideoPublisher_every: VideoUploadWhereInput
  _MagicalBackRelation_VideoPublisher_some: VideoUploadWhereInput
  _MagicalBackRelation_VideoPublisher_none: VideoUploadWhereInput
}

input UserWhereUniqueInput {
  id: ID
  auth0Id: String
}

type VideoUpload implements Node {
  id: ID!
  adminMetadata(where: VideoUploadAdminMetadataWhereInput): VideoUploadAdminMetadata
  createdAt: DateTime!
  updatedAt: DateTime!
  metadata(where: VideoUploadMetadataWhereInput): VideoUploadMetadata
  publishedBy(where: UserWhereInput): User
  published: Boolean!
  statusLog(where: VideoUploadStatusLogItemWhereInput, orderBy: VideoUploadStatusLogItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUploadStatusLogItem!]
  storageLinks(where: VideoUploadStorageLinkWhereInput, orderBy: VideoUploadStorageLinkOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUploadStorageLink!]
  submitedBy(where: UserWhereInput): User!
  submitedUrl: String!
}

type VideoUploadAdminMetadata implements Node {
  id: ID!
  videoUpload(where: VideoUploadWhereInput): VideoUpload!
  advertisingEnabled: Boolean!
}

"""A connection to a list of items."""
type VideoUploadAdminMetadataConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoUploadAdminMetadataEdge]!
  aggregate: AggregateVideoUploadAdminMetadata!
}

input VideoUploadAdminMetadataCreateInput {
  advertisingEnabled: Boolean
  videoUpload: VideoUploadCreateOneWithoutAdminMetadataInput!
}

input VideoUploadAdminMetadataCreateOneWithoutVideoUploadInput {
  create: VideoUploadAdminMetadataCreateWithoutVideoUploadInput
  connect: VideoUploadAdminMetadataWhereUniqueInput
}

input VideoUploadAdminMetadataCreateWithoutVideoUploadInput {
  advertisingEnabled: Boolean
}

"""An edge in a connection."""
type VideoUploadAdminMetadataEdge {
  """The item at the end of the edge."""
  node: VideoUploadAdminMetadata!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoUploadAdminMetadataOrderByInput {
  id_ASC
  id_DESC
  advertisingEnabled_ASC
  advertisingEnabled_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type VideoUploadAdminMetadataPreviousValues {
  id: ID!
  advertisingEnabled: Boolean!
}

type VideoUploadAdminMetadataSubscriptionPayload {
  mutation: MutationType!
  node: VideoUploadAdminMetadata
  updatedFields: [String!]
  previousValues: VideoUploadAdminMetadataPreviousValues
}

input VideoUploadAdminMetadataSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadAdminMetadataSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadAdminMetadataSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadAdminMetadataSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoUploadAdminMetadataWhereInput
}

input VideoUploadAdminMetadataUpdateInput {
  advertisingEnabled: Boolean
  videoUpload: VideoUploadUpdateOneWithoutAdminMetadataInput
}

input VideoUploadAdminMetadataUpdateOneWithoutVideoUploadInput {
  create: VideoUploadAdminMetadataCreateWithoutVideoUploadInput
  connect: VideoUploadAdminMetadataWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUploadAdminMetadataUpdateWithoutVideoUploadDataInput
  upsert: VideoUploadAdminMetadataUpsertWithoutVideoUploadInput
}

input VideoUploadAdminMetadataUpdateWithoutVideoUploadDataInput {
  advertisingEnabled: Boolean
}

input VideoUploadAdminMetadataUpsertWithoutVideoUploadInput {
  update: VideoUploadAdminMetadataUpdateWithoutVideoUploadDataInput!
  create: VideoUploadAdminMetadataCreateWithoutVideoUploadInput!
}

input VideoUploadAdminMetadataWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadAdminMetadataWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadAdminMetadataWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadAdminMetadataWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  advertisingEnabled: Boolean

  """All values that are not equal to given value."""
  advertisingEnabled_not: Boolean
  videoUpload: VideoUploadWhereInput
}

input VideoUploadAdminMetadataWhereUniqueInput {
  id: ID
}

"""A connection to a list of items."""
type VideoUploadConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoUploadEdge]!
  aggregate: AggregateVideoUpload!
}

input VideoUploadCreateInput {
  published: Boolean
  submitedUrl: String!
  adminMetadata: VideoUploadAdminMetadataCreateOneWithoutVideoUploadInput
  metadata: VideoUploadMetadataCreateOneWithoutVideoUploadInput
  publishedBy: UserCreateOneInput
  statusLog: VideoUploadStatusLogItemCreateManyWithoutVideoUploadInput
  storageLinks: VideoUploadStorageLinkCreateManyWithoutVideoUploadInput
  submitedBy: UserCreateOneInput!
}

input VideoUploadCreateOneWithoutAdminMetadataInput {
  create: VideoUploadCreateWithoutAdminMetadataInput
  connect: VideoUploadWhereUniqueInput
}

input VideoUploadCreateOneWithoutMetadataInput {
  create: VideoUploadCreateWithoutMetadataInput
  connect: VideoUploadWhereUniqueInput
}

input VideoUploadCreateOneWithoutStatusLogInput {
  create: VideoUploadCreateWithoutStatusLogInput
  connect: VideoUploadWhereUniqueInput
}

input VideoUploadCreateOneWithoutStorageLinksInput {
  create: VideoUploadCreateWithoutStorageLinksInput
  connect: VideoUploadWhereUniqueInput
}

input VideoUploadCreateWithoutAdminMetadataInput {
  published: Boolean
  submitedUrl: String!
  metadata: VideoUploadMetadataCreateOneWithoutVideoUploadInput
  publishedBy: UserCreateOneInput
  statusLog: VideoUploadStatusLogItemCreateManyWithoutVideoUploadInput
  storageLinks: VideoUploadStorageLinkCreateManyWithoutVideoUploadInput
  submitedBy: UserCreateOneInput!
}

input VideoUploadCreateWithoutMetadataInput {
  published: Boolean
  submitedUrl: String!
  adminMetadata: VideoUploadAdminMetadataCreateOneWithoutVideoUploadInput
  publishedBy: UserCreateOneInput
  statusLog: VideoUploadStatusLogItemCreateManyWithoutVideoUploadInput
  storageLinks: VideoUploadStorageLinkCreateManyWithoutVideoUploadInput
  submitedBy: UserCreateOneInput!
}

input VideoUploadCreateWithoutStatusLogInput {
  published: Boolean
  submitedUrl: String!
  adminMetadata: VideoUploadAdminMetadataCreateOneWithoutVideoUploadInput
  metadata: VideoUploadMetadataCreateOneWithoutVideoUploadInput
  publishedBy: UserCreateOneInput
  storageLinks: VideoUploadStorageLinkCreateManyWithoutVideoUploadInput
  submitedBy: UserCreateOneInput!
}

input VideoUploadCreateWithoutStorageLinksInput {
  published: Boolean
  submitedUrl: String!
  adminMetadata: VideoUploadAdminMetadataCreateOneWithoutVideoUploadInput
  metadata: VideoUploadMetadataCreateOneWithoutVideoUploadInput
  publishedBy: UserCreateOneInput
  statusLog: VideoUploadStatusLogItemCreateManyWithoutVideoUploadInput
  submitedBy: UserCreateOneInput!
}

"""An edge in a connection."""
type VideoUploadEdge {
  """The item at the end of the edge."""
  node: VideoUpload!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoUploadFileLinkType {
  RAW
  WEBM
  MP4
  FLAC
  JPG
  PNG
}

enum VideoUploadFileLinkVersion {
  WEB
  MASTER
}

enum VideoUploadLogItemEvent {
  DOWNLOAD
  TRANSCODE
  ENCODE
  TRANSCRIPTION
  USER_INPUT
  NLP
  SOCIAL
  THUMBNAIL_SELECT
  THUMBNAIL_COMPRESS
}

enum VideoUploadLogItemStatus {
  STARTED
  FINISHED
  FAILED
  TIMED_OUT
}

type VideoUploadMetadata implements Node {
  id: ID!
  videoUpload(where: VideoUploadWhereInput): VideoUpload!
  title: String
  subtitle: String
  dateRecorded(where: DateWhereInput): Date
  speakers: Int!
  generatedConversation(where: SpeechAPIConversationWhereInput): SpeechAPIConversation
}

"""A connection to a list of items."""
type VideoUploadMetadataConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoUploadMetadataEdge]!
  aggregate: AggregateVideoUploadMetadata!
}

input VideoUploadMetadataCreateInput {
  title: String
  subtitle: String
  speakers: Int
  videoUpload: VideoUploadCreateOneWithoutMetadataInput!
  dateRecorded: DateCreateOneInput
  generatedConversation: SpeechAPIConversationCreateOneWithoutVideoUploadInput
}

input VideoUploadMetadataCreateOneWithoutGeneratedConversationInput {
  create: VideoUploadMetadataCreateWithoutGeneratedConversationInput
  connect: VideoUploadMetadataWhereUniqueInput
}

input VideoUploadMetadataCreateOneWithoutVideoUploadInput {
  create: VideoUploadMetadataCreateWithoutVideoUploadInput
  connect: VideoUploadMetadataWhereUniqueInput
}

input VideoUploadMetadataCreateWithoutGeneratedConversationInput {
  title: String
  subtitle: String
  speakers: Int
  videoUpload: VideoUploadCreateOneWithoutMetadataInput!
  dateRecorded: DateCreateOneInput
}

input VideoUploadMetadataCreateWithoutVideoUploadInput {
  title: String
  subtitle: String
  speakers: Int
  dateRecorded: DateCreateOneInput
  generatedConversation: SpeechAPIConversationCreateOneWithoutVideoUploadInput
}

"""An edge in a connection."""
type VideoUploadMetadataEdge {
  """The item at the end of the edge."""
  node: VideoUploadMetadata!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoUploadMetadataOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  subtitle_ASC
  subtitle_DESC
  speakers_ASC
  speakers_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type VideoUploadMetadataPreviousValues {
  id: ID!
  title: String
  subtitle: String
  speakers: Int!
}

type VideoUploadMetadataSubscriptionPayload {
  mutation: MutationType!
  node: VideoUploadMetadata
  updatedFields: [String!]
  previousValues: VideoUploadMetadataPreviousValues
}

input VideoUploadMetadataSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadMetadataSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadMetadataSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadMetadataSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoUploadMetadataWhereInput
}

input VideoUploadMetadataUpdateInput {
  title: String
  subtitle: String
  speakers: Int
  videoUpload: VideoUploadUpdateOneWithoutMetadataInput
  dateRecorded: DateUpdateOneInput
  generatedConversation: SpeechAPIConversationUpdateOneWithoutVideoUploadInput
}

input VideoUploadMetadataUpdateOneWithoutGeneratedConversationInput {
  create: VideoUploadMetadataCreateWithoutGeneratedConversationInput
  connect: VideoUploadMetadataWhereUniqueInput
  delete: Boolean
  update: VideoUploadMetadataUpdateWithoutGeneratedConversationDataInput
  upsert: VideoUploadMetadataUpsertWithoutGeneratedConversationInput
}

input VideoUploadMetadataUpdateOneWithoutVideoUploadInput {
  create: VideoUploadMetadataCreateWithoutVideoUploadInput
  connect: VideoUploadMetadataWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: VideoUploadMetadataUpdateWithoutVideoUploadDataInput
  upsert: VideoUploadMetadataUpsertWithoutVideoUploadInput
}

input VideoUploadMetadataUpdateWithoutGeneratedConversationDataInput {
  title: String
  subtitle: String
  speakers: Int
  videoUpload: VideoUploadUpdateOneWithoutMetadataInput
  dateRecorded: DateUpdateOneInput
}

input VideoUploadMetadataUpdateWithoutVideoUploadDataInput {
  title: String
  subtitle: String
  speakers: Int
  dateRecorded: DateUpdateOneInput
  generatedConversation: SpeechAPIConversationUpdateOneWithoutVideoUploadInput
}

input VideoUploadMetadataUpsertWithoutGeneratedConversationInput {
  update: VideoUploadMetadataUpdateWithoutGeneratedConversationDataInput!
  create: VideoUploadMetadataCreateWithoutGeneratedConversationInput!
}

input VideoUploadMetadataUpsertWithoutVideoUploadInput {
  update: VideoUploadMetadataUpdateWithoutVideoUploadDataInput!
  create: VideoUploadMetadataCreateWithoutVideoUploadInput!
}

input VideoUploadMetadataWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadMetadataWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadMetadataWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadMetadataWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  subtitle: String

  """All values that are not equal to given value."""
  subtitle_not: String

  """All values that are contained in given list."""
  subtitle_in: [String!]

  """All values that are not contained in given list."""
  subtitle_not_in: [String!]

  """All values less than the given value."""
  subtitle_lt: String

  """All values less than or equal the given value."""
  subtitle_lte: String

  """All values greater than the given value."""
  subtitle_gt: String

  """All values greater than or equal the given value."""
  subtitle_gte: String

  """All values containing the given string."""
  subtitle_contains: String

  """All values not containing the given string."""
  subtitle_not_contains: String

  """All values starting with the given string."""
  subtitle_starts_with: String

  """All values not starting with the given string."""
  subtitle_not_starts_with: String

  """All values ending with the given string."""
  subtitle_ends_with: String

  """All values not ending with the given string."""
  subtitle_not_ends_with: String
  speakers: Int

  """All values that are not equal to given value."""
  speakers_not: Int

  """All values that are contained in given list."""
  speakers_in: [Int!]

  """All values that are not contained in given list."""
  speakers_not_in: [Int!]

  """All values less than the given value."""
  speakers_lt: Int

  """All values less than or equal the given value."""
  speakers_lte: Int

  """All values greater than the given value."""
  speakers_gt: Int

  """All values greater than or equal the given value."""
  speakers_gte: Int
  videoUpload: VideoUploadWhereInput
  dateRecorded: DateWhereInput
  generatedConversation: SpeechAPIConversationWhereInput
}

input VideoUploadMetadataWhereUniqueInput {
  id: ID
}

enum VideoUploadOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  published_ASC
  published_DESC
  submitedUrl_ASC
  submitedUrl_DESC
}

type VideoUploadPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  submitedUrl: String!
}

type VideoUploadStatusLogItem implements Node {
  id: ID!
  status: VideoUploadLogItemStatus!
  videoUpload(where: VideoUploadWhereInput): VideoUpload!
  event: VideoUploadLogItemEvent!
  createdAt: DateTime!
  timesoutAt: Int
  message: String
}

"""A connection to a list of items."""
type VideoUploadStatusLogItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoUploadStatusLogItemEdge]!
  aggregate: AggregateVideoUploadStatusLogItem!
}

input VideoUploadStatusLogItemCreateInput {
  status: VideoUploadLogItemStatus!
  event: VideoUploadLogItemEvent!
  timesoutAt: Int
  message: String
  videoUpload: VideoUploadCreateOneWithoutStatusLogInput!
}

input VideoUploadStatusLogItemCreateManyWithoutVideoUploadInput {
  create: [VideoUploadStatusLogItemCreateWithoutVideoUploadInput!]
  connect: [VideoUploadStatusLogItemWhereUniqueInput!]
}

input VideoUploadStatusLogItemCreateWithoutVideoUploadInput {
  status: VideoUploadLogItemStatus!
  event: VideoUploadLogItemEvent!
  timesoutAt: Int
  message: String
}

"""An edge in a connection."""
type VideoUploadStatusLogItemEdge {
  """The item at the end of the edge."""
  node: VideoUploadStatusLogItem!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoUploadStatusLogItemOrderByInput {
  id_ASC
  id_DESC
  status_ASC
  status_DESC
  event_ASC
  event_DESC
  createdAt_ASC
  createdAt_DESC
  timesoutAt_ASC
  timesoutAt_DESC
  message_ASC
  message_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type VideoUploadStatusLogItemPreviousValues {
  id: ID!
  status: VideoUploadLogItemStatus!
  event: VideoUploadLogItemEvent!
  createdAt: DateTime!
  timesoutAt: Int
  message: String
}

type VideoUploadStatusLogItemSubscriptionPayload {
  mutation: MutationType!
  node: VideoUploadStatusLogItem
  updatedFields: [String!]
  previousValues: VideoUploadStatusLogItemPreviousValues
}

input VideoUploadStatusLogItemSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadStatusLogItemSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadStatusLogItemSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadStatusLogItemSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoUploadStatusLogItemWhereInput
}

input VideoUploadStatusLogItemUpdateInput {
  status: VideoUploadLogItemStatus
  event: VideoUploadLogItemEvent
  timesoutAt: Int
  message: String
  videoUpload: VideoUploadUpdateOneWithoutStatusLogInput
}

input VideoUploadStatusLogItemUpdateManyWithoutVideoUploadInput {
  create: [VideoUploadStatusLogItemCreateWithoutVideoUploadInput!]
  connect: [VideoUploadStatusLogItemWhereUniqueInput!]
  disconnect: [VideoUploadStatusLogItemWhereUniqueInput!]
  delete: [VideoUploadStatusLogItemWhereUniqueInput!]
  update: [VideoUploadStatusLogItemUpdateWithWhereUniqueWithoutVideoUploadInput!]
  upsert: [VideoUploadStatusLogItemUpsertWithWhereUniqueWithoutVideoUploadInput!]
}

input VideoUploadStatusLogItemUpdateWithoutVideoUploadDataInput {
  status: VideoUploadLogItemStatus
  event: VideoUploadLogItemEvent
  timesoutAt: Int
  message: String
}

input VideoUploadStatusLogItemUpdateWithWhereUniqueWithoutVideoUploadInput {
  where: VideoUploadStatusLogItemWhereUniqueInput!
  data: VideoUploadStatusLogItemUpdateWithoutVideoUploadDataInput!
}

input VideoUploadStatusLogItemUpsertWithWhereUniqueWithoutVideoUploadInput {
  where: VideoUploadStatusLogItemWhereUniqueInput!
  update: VideoUploadStatusLogItemUpdateWithoutVideoUploadDataInput!
  create: VideoUploadStatusLogItemCreateWithoutVideoUploadInput!
}

input VideoUploadStatusLogItemWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadStatusLogItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadStatusLogItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadStatusLogItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  status: VideoUploadLogItemStatus

  """All values that are not equal to given value."""
  status_not: VideoUploadLogItemStatus

  """All values that are contained in given list."""
  status_in: [VideoUploadLogItemStatus!]

  """All values that are not contained in given list."""
  status_not_in: [VideoUploadLogItemStatus!]
  event: VideoUploadLogItemEvent

  """All values that are not equal to given value."""
  event_not: VideoUploadLogItemEvent

  """All values that are contained in given list."""
  event_in: [VideoUploadLogItemEvent!]

  """All values that are not contained in given list."""
  event_not_in: [VideoUploadLogItemEvent!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  timesoutAt: Int

  """All values that are not equal to given value."""
  timesoutAt_not: Int

  """All values that are contained in given list."""
  timesoutAt_in: [Int!]

  """All values that are not contained in given list."""
  timesoutAt_not_in: [Int!]

  """All values less than the given value."""
  timesoutAt_lt: Int

  """All values less than or equal the given value."""
  timesoutAt_lte: Int

  """All values greater than the given value."""
  timesoutAt_gt: Int

  """All values greater than or equal the given value."""
  timesoutAt_gte: Int
  message: String

  """All values that are not equal to given value."""
  message_not: String

  """All values that are contained in given list."""
  message_in: [String!]

  """All values that are not contained in given list."""
  message_not_in: [String!]

  """All values less than the given value."""
  message_lt: String

  """All values less than or equal the given value."""
  message_lte: String

  """All values greater than the given value."""
  message_gt: String

  """All values greater than or equal the given value."""
  message_gte: String

  """All values containing the given string."""
  message_contains: String

  """All values not containing the given string."""
  message_not_contains: String

  """All values starting with the given string."""
  message_starts_with: String

  """All values not starting with the given string."""
  message_not_starts_with: String

  """All values ending with the given string."""
  message_ends_with: String

  """All values not ending with the given string."""
  message_not_ends_with: String
  videoUpload: VideoUploadWhereInput
}

input VideoUploadStatusLogItemWhereUniqueInput {
  id: ID
}

type VideoUploadStorageLink implements Node {
  id: ID!
  videoUpload(where: VideoUploadWhereInput): VideoUpload!
  path: String!
  bucket: String!
  version: VideoUploadFileLinkVersion!
  fileType: VideoUploadFileLinkType!
}

"""A connection to a list of items."""
type VideoUploadStorageLinkConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [VideoUploadStorageLinkEdge]!
  aggregate: AggregateVideoUploadStorageLink!
}

input VideoUploadStorageLinkCreateInput {
  path: String!
  bucket: String!
  version: VideoUploadFileLinkVersion!
  fileType: VideoUploadFileLinkType!
  videoUpload: VideoUploadCreateOneWithoutStorageLinksInput!
}

input VideoUploadStorageLinkCreateManyWithoutVideoUploadInput {
  create: [VideoUploadStorageLinkCreateWithoutVideoUploadInput!]
  connect: [VideoUploadStorageLinkWhereUniqueInput!]
}

input VideoUploadStorageLinkCreateWithoutVideoUploadInput {
  path: String!
  bucket: String!
  version: VideoUploadFileLinkVersion!
  fileType: VideoUploadFileLinkType!
}

"""An edge in a connection."""
type VideoUploadStorageLinkEdge {
  """The item at the end of the edge."""
  node: VideoUploadStorageLink!

  """A cursor for use in pagination."""
  cursor: String!
}

enum VideoUploadStorageLinkOrderByInput {
  id_ASC
  id_DESC
  path_ASC
  path_DESC
  bucket_ASC
  bucket_DESC
  version_ASC
  version_DESC
  fileType_ASC
  fileType_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type VideoUploadStorageLinkPreviousValues {
  id: ID!
  path: String!
  bucket: String!
  version: VideoUploadFileLinkVersion!
  fileType: VideoUploadFileLinkType!
}

type VideoUploadStorageLinkSubscriptionPayload {
  mutation: MutationType!
  node: VideoUploadStorageLink
  updatedFields: [String!]
  previousValues: VideoUploadStorageLinkPreviousValues
}

input VideoUploadStorageLinkSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadStorageLinkSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadStorageLinkSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadStorageLinkSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoUploadStorageLinkWhereInput
}

input VideoUploadStorageLinkUpdateInput {
  path: String
  bucket: String
  version: VideoUploadFileLinkVersion
  fileType: VideoUploadFileLinkType
  videoUpload: VideoUploadUpdateOneWithoutStorageLinksInput
}

input VideoUploadStorageLinkUpdateManyWithoutVideoUploadInput {
  create: [VideoUploadStorageLinkCreateWithoutVideoUploadInput!]
  connect: [VideoUploadStorageLinkWhereUniqueInput!]
  disconnect: [VideoUploadStorageLinkWhereUniqueInput!]
  delete: [VideoUploadStorageLinkWhereUniqueInput!]
  update: [VideoUploadStorageLinkUpdateWithWhereUniqueWithoutVideoUploadInput!]
  upsert: [VideoUploadStorageLinkUpsertWithWhereUniqueWithoutVideoUploadInput!]
}

input VideoUploadStorageLinkUpdateWithoutVideoUploadDataInput {
  path: String
  bucket: String
  version: VideoUploadFileLinkVersion
  fileType: VideoUploadFileLinkType
}

input VideoUploadStorageLinkUpdateWithWhereUniqueWithoutVideoUploadInput {
  where: VideoUploadStorageLinkWhereUniqueInput!
  data: VideoUploadStorageLinkUpdateWithoutVideoUploadDataInput!
}

input VideoUploadStorageLinkUpsertWithWhereUniqueWithoutVideoUploadInput {
  where: VideoUploadStorageLinkWhereUniqueInput!
  update: VideoUploadStorageLinkUpdateWithoutVideoUploadDataInput!
  create: VideoUploadStorageLinkCreateWithoutVideoUploadInput!
}

input VideoUploadStorageLinkWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadStorageLinkWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadStorageLinkWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadStorageLinkWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  path: String

  """All values that are not equal to given value."""
  path_not: String

  """All values that are contained in given list."""
  path_in: [String!]

  """All values that are not contained in given list."""
  path_not_in: [String!]

  """All values less than the given value."""
  path_lt: String

  """All values less than or equal the given value."""
  path_lte: String

  """All values greater than the given value."""
  path_gt: String

  """All values greater than or equal the given value."""
  path_gte: String

  """All values containing the given string."""
  path_contains: String

  """All values not containing the given string."""
  path_not_contains: String

  """All values starting with the given string."""
  path_starts_with: String

  """All values not starting with the given string."""
  path_not_starts_with: String

  """All values ending with the given string."""
  path_ends_with: String

  """All values not ending with the given string."""
  path_not_ends_with: String
  bucket: String

  """All values that are not equal to given value."""
  bucket_not: String

  """All values that are contained in given list."""
  bucket_in: [String!]

  """All values that are not contained in given list."""
  bucket_not_in: [String!]

  """All values less than the given value."""
  bucket_lt: String

  """All values less than or equal the given value."""
  bucket_lte: String

  """All values greater than the given value."""
  bucket_gt: String

  """All values greater than or equal the given value."""
  bucket_gte: String

  """All values containing the given string."""
  bucket_contains: String

  """All values not containing the given string."""
  bucket_not_contains: String

  """All values starting with the given string."""
  bucket_starts_with: String

  """All values not starting with the given string."""
  bucket_not_starts_with: String

  """All values ending with the given string."""
  bucket_ends_with: String

  """All values not ending with the given string."""
  bucket_not_ends_with: String
  version: VideoUploadFileLinkVersion

  """All values that are not equal to given value."""
  version_not: VideoUploadFileLinkVersion

  """All values that are contained in given list."""
  version_in: [VideoUploadFileLinkVersion!]

  """All values that are not contained in given list."""
  version_not_in: [VideoUploadFileLinkVersion!]
  fileType: VideoUploadFileLinkType

  """All values that are not equal to given value."""
  fileType_not: VideoUploadFileLinkType

  """All values that are contained in given list."""
  fileType_in: [VideoUploadFileLinkType!]

  """All values that are not contained in given list."""
  fileType_not_in: [VideoUploadFileLinkType!]
  videoUpload: VideoUploadWhereInput
}

input VideoUploadStorageLinkWhereUniqueInput {
  id: ID
}

type VideoUploadSubscriptionPayload {
  mutation: MutationType!
  node: VideoUpload
  updatedFields: [String!]
  previousValues: VideoUploadPreviousValues
}

input VideoUploadSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: VideoUploadWhereInput
}

input VideoUploadUpdateInput {
  published: Boolean
  submitedUrl: String
  adminMetadata: VideoUploadAdminMetadataUpdateOneWithoutVideoUploadInput
  metadata: VideoUploadMetadataUpdateOneWithoutVideoUploadInput
  publishedBy: UserUpdateOneInput
  statusLog: VideoUploadStatusLogItemUpdateManyWithoutVideoUploadInput
  storageLinks: VideoUploadStorageLinkUpdateManyWithoutVideoUploadInput
  submitedBy: UserUpdateOneInput
}

input VideoUploadUpdateOneWithoutAdminMetadataInput {
  create: VideoUploadCreateWithoutAdminMetadataInput
  connect: VideoUploadWhereUniqueInput
  delete: Boolean
  update: VideoUploadUpdateWithoutAdminMetadataDataInput
  upsert: VideoUploadUpsertWithoutAdminMetadataInput
}

input VideoUploadUpdateOneWithoutMetadataInput {
  create: VideoUploadCreateWithoutMetadataInput
  connect: VideoUploadWhereUniqueInput
  delete: Boolean
  update: VideoUploadUpdateWithoutMetadataDataInput
  upsert: VideoUploadUpsertWithoutMetadataInput
}

input VideoUploadUpdateOneWithoutStatusLogInput {
  create: VideoUploadCreateWithoutStatusLogInput
  connect: VideoUploadWhereUniqueInput
  delete: Boolean
  update: VideoUploadUpdateWithoutStatusLogDataInput
  upsert: VideoUploadUpsertWithoutStatusLogInput
}

input VideoUploadUpdateOneWithoutStorageLinksInput {
  create: VideoUploadCreateWithoutStorageLinksInput
  connect: VideoUploadWhereUniqueInput
  delete: Boolean
  update: VideoUploadUpdateWithoutStorageLinksDataInput
  upsert: VideoUploadUpsertWithoutStorageLinksInput
}

input VideoUploadUpdateWithoutAdminMetadataDataInput {
  published: Boolean
  submitedUrl: String
  metadata: VideoUploadMetadataUpdateOneWithoutVideoUploadInput
  publishedBy: UserUpdateOneInput
  statusLog: VideoUploadStatusLogItemUpdateManyWithoutVideoUploadInput
  storageLinks: VideoUploadStorageLinkUpdateManyWithoutVideoUploadInput
  submitedBy: UserUpdateOneInput
}

input VideoUploadUpdateWithoutMetadataDataInput {
  published: Boolean
  submitedUrl: String
  adminMetadata: VideoUploadAdminMetadataUpdateOneWithoutVideoUploadInput
  publishedBy: UserUpdateOneInput
  statusLog: VideoUploadStatusLogItemUpdateManyWithoutVideoUploadInput
  storageLinks: VideoUploadStorageLinkUpdateManyWithoutVideoUploadInput
  submitedBy: UserUpdateOneInput
}

input VideoUploadUpdateWithoutStatusLogDataInput {
  published: Boolean
  submitedUrl: String
  adminMetadata: VideoUploadAdminMetadataUpdateOneWithoutVideoUploadInput
  metadata: VideoUploadMetadataUpdateOneWithoutVideoUploadInput
  publishedBy: UserUpdateOneInput
  storageLinks: VideoUploadStorageLinkUpdateManyWithoutVideoUploadInput
  submitedBy: UserUpdateOneInput
}

input VideoUploadUpdateWithoutStorageLinksDataInput {
  published: Boolean
  submitedUrl: String
  adminMetadata: VideoUploadAdminMetadataUpdateOneWithoutVideoUploadInput
  metadata: VideoUploadMetadataUpdateOneWithoutVideoUploadInput
  publishedBy: UserUpdateOneInput
  statusLog: VideoUploadStatusLogItemUpdateManyWithoutVideoUploadInput
  submitedBy: UserUpdateOneInput
}

input VideoUploadUpsertWithoutAdminMetadataInput {
  update: VideoUploadUpdateWithoutAdminMetadataDataInput!
  create: VideoUploadCreateWithoutAdminMetadataInput!
}

input VideoUploadUpsertWithoutMetadataInput {
  update: VideoUploadUpdateWithoutMetadataDataInput!
  create: VideoUploadCreateWithoutMetadataInput!
}

input VideoUploadUpsertWithoutStatusLogInput {
  update: VideoUploadUpdateWithoutStatusLogDataInput!
  create: VideoUploadCreateWithoutStatusLogInput!
}

input VideoUploadUpsertWithoutStorageLinksInput {
  update: VideoUploadUpdateWithoutStorageLinksDataInput!
  create: VideoUploadCreateWithoutStorageLinksInput!
}

input VideoUploadWhereInput {
  """Logical AND on all given filters."""
  AND: [VideoUploadWhereInput!]

  """Logical OR on all given filters."""
  OR: [VideoUploadWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [VideoUploadWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  submitedUrl: String

  """All values that are not equal to given value."""
  submitedUrl_not: String

  """All values that are contained in given list."""
  submitedUrl_in: [String!]

  """All values that are not contained in given list."""
  submitedUrl_not_in: [String!]

  """All values less than the given value."""
  submitedUrl_lt: String

  """All values less than or equal the given value."""
  submitedUrl_lte: String

  """All values greater than the given value."""
  submitedUrl_gt: String

  """All values greater than or equal the given value."""
  submitedUrl_gte: String

  """All values containing the given string."""
  submitedUrl_contains: String

  """All values not containing the given string."""
  submitedUrl_not_contains: String

  """All values starting with the given string."""
  submitedUrl_starts_with: String

  """All values not starting with the given string."""
  submitedUrl_not_starts_with: String

  """All values ending with the given string."""
  submitedUrl_ends_with: String

  """All values not ending with the given string."""
  submitedUrl_not_ends_with: String
  adminMetadata: VideoUploadAdminMetadataWhereInput
  metadata: VideoUploadMetadataWhereInput
  publishedBy: UserWhereInput
  statusLog_every: VideoUploadStatusLogItemWhereInput
  statusLog_some: VideoUploadStatusLogItemWhereInput
  statusLog_none: VideoUploadStatusLogItemWhereInput
  storageLinks_every: VideoUploadStorageLinkWhereInput
  storageLinks_some: VideoUploadStorageLinkWhereInput
  storageLinks_none: VideoUploadStorageLinkWhereInput
  submitedBy: UserWhereInput
}

input VideoUploadWhereUniqueInput {
  id: ID
  submitedUrl: String
}
