interface IVideo {
  published: Boolean @default(value: "false")
  advertisingEnabled: Boolean @default(value: "false")
  views: Int @default(value: "0")
  productionLink: VideoStorageLink!
    @relation(name: "VideoStorageProductionRelation")
  transcription: [TranscriptionItem!]!
  source: Source
}

type User {
  id: ID! @unique
  email: String
  auth0Id: String @unique
  role: Role @default(value: "USER")
  displayName: String
  avatar: String
  givenName: String
  familyName: String
  adminRoles: [AdminRole] @default(value: [])
}

type VideoUpload implements IVideo {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  submitedBy: User! @relation(name: "VideoSubmitter")
  publishedBy: User @relation(name: "VideoPublisher")
  publishedVideo: Video
  submitedUrl: String! @unique
  status: VideoUploadStatus!
  state: VideoUploadState! @default(value: "PENDING")
  autoTranscription: [String!]!
  transcription: [TranscriptionItem!]!
  published: Boolean! @default(value: "false")
  advertisingEnabled: Boolean! @default(value: "false")
  views: Int! @default(value: "0")
  rawStorageLink: VideoStorageLink @relation(name: "VideoStorageRawRelation")
  title: String
  subtitle: String
  dateRecorded: Date
  tags: [Tag!]!
  source: Source
  productionLink: VideoStorageLink
    @relation(name: "VideoStorageProductionRelation")
}

type Tag {
  id: ID! @unique
  name: String!
  videos: [Video!]!
}

type TranscriptionItem {
  speaker: Speaker!
  timestampStart: Int!
  content: String!
  sentiment: Float
}

type Source {
  publication: Publication!
  url: String!
  title: String
  videos: [Video!]!
  priority: Int! @default(value: "5")
}

type Video implements IVideo {
  id: ID! @unique
  published: Boolean @default(value: "false")
  advertisingEnabled: Boolean @default(value: "false")
  views: Int @default(value: "0")
}

type Speaker {
  name: String! @unique
  avatarPath: String!
  title: String!
}

type Date {
  month: Int!
  day: Int!
  year: Int!
}

type Publication {
  avatarPath: String!
  name: String!
}

type VideoStorageLink {
  id: ID! @unique
  videoID: ID!
  path: String!
  bucket: String!
  version: VideoVersion!
}
